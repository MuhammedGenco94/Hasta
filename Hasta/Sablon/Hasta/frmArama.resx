<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="HastaID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Adi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Soyadi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Boyut.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Kanama.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Patoloji.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="PKS.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD4AAAA3CAYAAABUzvmMAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPgSURBVGhD7ZrZ
        TxNRFMb5ozS+sARbQEUCgoCmBUVW10aEaKKgktRdIxqjUTAxGkI0JiRuBJ4U4xJ80UhiIMpqIluxte20
        FDnOLfdO79ze0plpWVrvl/we/M45c84XdEYTU8CgjjXaIa+wCsw5FiixHoLh4XFcWTn19PZBQXEtmLdY
        obCkDuwXbuGKfhkK7nK5Id1UEiQnt1Ihv+gA7oi/yD5278LCX9yhT7qCDw4NK4uzt1WoQhOq606B3z+P
        J2KXw/EbMs2lYYFZnM4/eEKbNAX/u7gYxLS1TDlgcGgEV5eUm1+rHHHlWjt2Y1f+zqpQ6O37sLskdAPZ
        2XD8Ena1SVPwkdGJIOQABKuOzufKETX7m7Abu+idd9o6sRsS2Vmw8yAsyj8chBZpCv6m72MQ+ghWjjmn
        ckTejjrsxi5659SMA7shkZ2IGbmO0CJNwX9NTgehj2B1+Wq7coDtmB27sSuD+vN9+mwrdkMiO3dZ67Gj
        Tbpebg6HUzkiK8LLrelM+HGxaD4QkJ+7R9nL24kIBBbwhDbpCo6E3thlFfURD1kpkX2IzCyLsq/15gND
        nzTdwYnoQzbnWIMvl3h+xlhNTs2od2Zb5U+q+i2vR4aDdz5+Brb6Fii1HIbms9c0v01jkVeS5M/WOdhd
        boMTJy/C065uXNEvw8GRnC4XjP/8CW6PBzsrL7QL7US7Y5EIbkQiuAi+8hLBRXBjEsGNSARP1OA9JhO8
        SE2Fl2lp8DYzEz6ZzUnLQHX1UvDvbW3B0Ih+TmMyMvfuHaSQnzaC15SMDNTUQAoJjXDnbqDYCH5rblJB
        h48Y3FuYzh1OZERwEVwEF8FF8GRCBNcS3Nd8FDzyPwyiMjurLPC+7g35LqfiEzxut2o2Uk3lU/3RQDfT
        swRdwaW717kP56Esse3l+zLeD32qmmdiTFWna5H8aKCb6VlCXIL7WhpV+OsrwxbR/f7KIvBOT6k9pj9s
        hvLpXd73b5Qe2ifQczRxCc4+lAfdLz15qPo1ItoMr46QXnVF7eGxasGlR/e4swjfjfPcGbqHV0esaXAW
        dgmN0V5eHSGCR3kWS1yCsw/lUlUEnvHRsFnvwBfwl+dxZ+g+Xh2xpsG9P4bUfPsatojuR0E9Y8Nqj+kP
        m+HUEevqtzqCXuJrsoXVfNftak/+3tMzCFWdqRHWdXDa9zXUhHzmb23S7SsR52ifZnWCy58d+pjlIAuk
        jvtcP8iRclWNrUfyaaSuzqg9PHQFTyZEcBFcBBfB/9/g7rxN3OFEZpngG1XhecOJis/CBO/OyFCC04Vk
        5nNx8dJ/DCDBu9PSoN9k4jYnEwAA/wDkdVasNKSsAQAAAABJRU5ErkJggg==
</value>
  </data>
</root>